#!/bin/sh

errorExit() {
	echo "*** $*" 1>&2
	exit 1
}

export KUBECONFIG=/etc/kubernetes/admin.conf

kubectl get configmap -n kube-system kubeadm-config -o yaml >/tmp/kubeadm-config-cm.yaml || errorExit "Error getting configmap/kubeadm-config"

sed -i 's/^\([ \t]*nodeName:\).*/\1 {{ hostvars[master]['ansible_fqdn'] }}/' /tmp/kubeadm-config-cm.yaml

kubectl apply -f /tmp/kubeadm-config-cm.yaml --force || errorExit "Error applying /tmp/kubeadm-config-cm.yaml"

kubectl get configmap -n kube-system kubeadm-config -o yaml | grep -q 'nodeName: {{ hostvars[master]['ansible_fqdn'] }}' || errorExit "Change to configmap/kubeadm-config was not applied successfully."

/tmp/kubeadm-{{ KUBERNETES_VERSION }} upgrade plan || errorExit "Error, /tmp/kubeadm-{{ KUBERNETES_VERSION }} upgrade plan was not successful."

SLEEP_TIME=30
MAX_IT=5
for i in `seq 1 $MAX_IT`; do
	if /tmp/kubeadm-{{ KUBERNETES_VERSION }} upgrade apply v{{ KUBERNETES_VERSION }} -y --etcd-upgrade=false; then
		exit 0
	elif [ "$i" -lt $MAX_IT ]; then
		echo "Upgrade was unsuccessful, waiting 30s and retrying."
		sleep ${SLEEP_TIME}s
		SLEEP_TIME=`expr $SLEEP_TIME \* 2`
	fi
done

errorExit "Upgrade was unsuccessful after ${MAX_IT} attempts. Giving up."
